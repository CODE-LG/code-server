name: CD - Docker Hub Deploy to Dev

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant permission to gradlew
        run: chmod +x ./gradlew

      - name: Generate application.yml
        run: |
          mkdir -p src/main/resources
          cat <<EOF > src/main/resources/application.yml
          server:
            port: 8080
          security:
            jwt:
              token:
                expire-length: ${{ secrets.JWT_EXPIRE_LENGTH }}
                secret-key: ${{ secrets.JWT_SECRET_KEY }}
          cloud:
            aws:
              region:
                static: ap-northeast-2
              s3:
                bucket: code-l-bucket
              credentials:
                access-key: ${{ secrets.DEV_S3_ACCESS_KEY }}
                secret-key: ${{ secrets.DEV_S3_SECRET_KEY }}
          management:
            endpoints:
              web:
                exposure:
                  include: health, metrics, prometheus
          EOF

      - name: Build jar
        run: ./gradlew clean build -x test

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/codel-app:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/codel-app:latest

      - name: Deploy to dev server (install docker + run)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USER }}
          key: ${{ secrets.DEV_SERVER_KEY }}
          script: |
            echo "🛠 Checking Docker..."
            if ! command -v docker &> /dev/null
            then
              echo "📦 Docker not found. Installing..."
              curl -fsSL https://get.docker.com | sudo bash
            else
              echo "✅ Docker already installed."
            fi

            echo "🧼 Cleaning up old container..."
            sudo docker stop codel || true
            sudo docker rm codel || true

            echo "🐳 Pulling latest image from Docker Hub..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/codel-app:latest

            echo "🚀 Starting container..."
            sudo docker run -d --name codel -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/codel-app:latest

            echo "📄 Tail log output:"
            sudo docker logs --tail=20 codel || true
